version: '3'

services:
  postgres:
    image: postgres:latest
    platform: linux/amd64
    container_name: postgres-db
    env_file: .env
    ports:
      - ${POSTGRES_LOCAL_PORT}:${POSTGRES_DOCKER_PORT}
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data

  springboot-app:
    build: .
    platform: linux/amd64
    container_name: springboot-app
    image: yahyafati/reading-realm-backend:latest
    env_file: .env
    ports:
      - ${SPRINGBOOT_LOCAL_PORT}:${SPRINGBOOT_DOCKER_PORT}
    depends_on:
      - postgres
    environment:
      SPRING_PROFILES_ACTIVE: prod  # Set the active profile to "local"
      SPRING_DATASOURCE_URL: jdbc:${POSTGRES_HOST}://${POSTGRES_USER}:${POSTGRES_DOCKER_PORT}/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}

      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_REDIRECT_URI: ${GOOGLE_REDIRECT_URI}
      SERVER_PORT: ${SPRINGBOOT_DOCKER_PORT}
      SERVER_SSL_ENABLED: true
      SERVER_SSL_KEY_STORE: ${KEY_STORE}
      SERVER_SSL_KEY_STORE_PASSWORD: ${KEY_STORE_PASSWORD}
      SERVER_SSL_PASSWORD: ${KEY_STORE_PASSWORD}
      SERVER_SSL_KEY_ALIAS: ${KEY_ALIAS}
      SERVER_SSL_KEY_STORE_TYPE: ${KEY_STORE_TYPE}

      ORG_PEN_TALES_SECURITY_JWT_SECRET: ${JWT_SECRET}
      ORG_PEN_TALES_SECURITY_OAUTH2_AUTHORIZED_REDIRECT_ORIGINS: ${OAUTH2_AUTHORIZED_REDIRECT_ORIGINS}
      ORG_PEN_TALES_SECURITY_CORS_ALLOW_CREDENTIALS: ${CORS_ALLOW_CREDENTIALS}
      ORG_PEN_TALES_SECURITY_CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      ORG_PEN_TALES_AWS_S3_REGION: ${AWS_REGION}
      ORG_PEN_TALES_AWS_S3_BUCKET: ${AWS_BUCKET}
    volumes:
      - gradle-cache:/root/.gradle  # Mount Gradle cache directory as a volume
      - upload-cache:/app/uploads  # Mount the upload directory as a volume

  pgadmin:
    image: dpage/pgadmin4
    platform: linux/amd64
    container_name: pgadmin
    ports:
      - ${PGADMIN_LOCAL_PORT}:${PGADMIN_DOCKER_PORT}
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - postgres

volumes:
  postgres-data:
  gradle-cache:
  upload-cache: