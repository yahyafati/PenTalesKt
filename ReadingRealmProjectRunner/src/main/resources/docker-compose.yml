services:
  postgres:
    image: postgres:latest
    platform: linux/amd64
    container_name: postgres-db
    env_file: .env
    ports:
      - ${POSTGRES_LOCAL_PORT}:${POSTGRES_DOCKER_PORT}
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/tmp/init.sql

  sentiment-analysis:
    image: yahyafati/sentiment-analysis:latest
    platform: linux/amd64
    container_name: sentiment-analysis
    ports:
      - ${SENTIMENT_ANALYSIS_LOCAL_PORT}:${SENTIMENT_ANALYSIS_DOCKER_PORT}
    environment:
      FLASK_DOCKER_PORT: ${SENTIMENT_ANALYSIS_DOCKER_PORT}

  springboot-app:
    platform: linux/amd64
    container_name: springboot-app
    image: yahyafati/reading-realm-backend:latest
    env_file: .env
    ports:
      - ${SPRINGBOOT_LOCAL_PORT}:${SPRINGBOOT_DOCKER_PORT}
    depends_on:
      - postgres
    environment:
      SPRING_PROFILES_ACTIVE: local  # Set the active profile to "local"
      SPRING_DATASOURCE_URL: jdbc:${POSTGRES_HOST}://${POSTGRES_USER}:${POSTGRES_DOCKER_PORT}/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}

      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_REDIRECT_URI: ${GOOGLE_REDIRECT_URI}

      SERVER_PORT: ${SPRINGBOOT_DOCKER_PORT}

      ORG_PEN_TALES_SECURITY_JWT_SECRET: ${JWT_SECRET}
      ORG_PEN_TALES_SECURITY_OAUTH2_AUTHORIZED_REDIRECT_ORIGINS: ${OAUTH2_AUTHORIZED_REDIRECT_ORIGINS}
      ORG_PEN_TALES_SECURITY_CORS_ALLOW_CREDENTIALS: ${CORS_ALLOW_CREDENTIALS}
      ORG_PEN_TALES_SECURITY_CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      ORG_PEN_TALES_AWS_S3_REGION: ${AWS_REGION}
      ORG_PEN_TALES_AWS_S3_BUCKET: ${AWS_BUCKET}
      ORG_PEN_TALES_FIREBASE_CREDENTIAL_PATH: ${FIREBASE_CREDENTIAL_PATH}
      ORG_PEN_TALES_SENTIMENT_ANALYSIS_ENDPOINT: http://sentiment-analysis:${SENTIMENT_ANALYSIS_DOCKER_PORT}/evaluate
      ORG_PEN_TALES_SENTIMENT_ANALYSIS_INTERVAL_RATE: 10000
      #      ORG_PEN_TALES_SENTIMENT_ANALYSIS_MIN_POOL_SIZE: 1

      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    volumes:
      - gradle-cache:/root/.gradle  # Mount Gradle cache directory as a volume
      - upload-cache:/app/uploads  # Mount the upload directory as a volume
      - ./firebase-key.json:/app/firebase-credentials.json  # Mount the Firebase credentials file as a volume

  pgadmin:
    image: dpage/pgadmin4
    platform: linux/amd64
    container_name: pgadmin
    ports:
      - ${PGADMIN_LOCAL_PORT}:${PGADMIN_DOCKER_PORT}
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - ./init.sql:/tmp/init.sql
    depends_on:
      - postgres

  frontend:
    depends_on:
      - springboot-app
    container_name: reading-realm-frontend
    image: yahyafati/reading-realm-frontend:latest
    volumes:
      - node_modules:/app/node_modules
      - ./frontend.env:/app/.env
    ports:
      - "5173:5173"

volumes:
  postgres-data:
  gradle-cache:
  upload-cache:
  node_modules: